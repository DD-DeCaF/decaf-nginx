# daemon off;
worker_processes  1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $upstream_response_time';
    access_log  /var/log/nginx/access.log  main;
    client_max_body_size 200M;

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    sendfile        off;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream iloop-frontend {
        server frontend.iloop-public:80;
    }

    upstream iloop-frontend-staging {
        server frontend.staging-iloop:80;
    }

    upstream iloop-web-staging {
        server web.staging-iloop:80;
    }

    upstream iloop-worker-staging {
        server worker.staging-iloop:4000;
    }

    upstream iloop-web {
        server web.iloop-public:80;
    }

    upstream iloop-worker {
        server worker.iloop-public:4000;
    }

    upstream pathways {
        server server.metabolic-ninja:8080;
    }

    upstream pathways-staging {
        server server.metabolic-ninja-test:8080;
    }

    upstream iloop_to_model {
        server web.iloop-to-model:7000;
    }

    upstream iloop_to_model-staging {
        server web.iloop-to-model-test:7000;
    }

    upstream frontend {
        server frontend.iloop-public:80;
    }

    upstream model {
        server web.model:8000;
    }

    upstream model-staging {
        server web.model-test:8000;
    }

    upstream upload {
        server web.upload:7000;
    }

    upstream upload-staging {
        server web.upload-test:7000;
    }

    upstream idmapping {
        server web.id-mapper:7000;
    }

    upstream schema_collector {
        server web.schema-collector:7500;
    }

    upstream kibana {
        server kibana.loghouse:5601;
    }

    upstream ice {
        server ice.Ice:8080;
    }

    upstream ice-staging {
        server ice.ice-test:8080;
    }

    upstream gene-to-reactions {
        server web.gene-to-reactions:6500;
    }

    upstream gene-to-reactions-staging {
        server web.gene-to-reactions-test:6500;
    }

    upstream try-cameo-bio {
        server 139.59.134.152:8000;
    }

    upstream iam-staging {
        server web.iam-test:8000;
    }

    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name try.cameo.bio;
        ssl_certificate /etc/letsencrypt/live/try.cameo.bio/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/try.cameo.bio/privkey.pem;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://try-cameo-bio;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header X-NginX-Proxy true;
        }

        location ~* /(user[-/][a-zA-Z0-9]*)/(api/kernels/[^/]+/(channels|iopub|shell|stdin)|terminals/websocket)/? {
            proxy_pass http://try-cameo-bio;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header X-NginX-Proxy true;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;

        }
    }

    server {
        listen 443 ssl;
        server_name cfb.*;
        ssl_certificate /etc/letsencrypt/live/cfb.dd-decaf.eu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/cfb.dd-decaf.eu/privkey.pem;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        # Lets encrypt renew domain verification files
        location /.well-known/acme-challenge {
            allow all;
            default_type "text/plain";
        }


        location / {
            root /usr/share/decaf/frontend/prod/dist;
        }

        location /login {
            root /usr/share/decaf/frontend/prod/dist;
        }
    }

    server {
        listen 443 ssl;
        server_name staging.*;
        ssl_certificate /etc/letsencrypt/live/staging.dd-decaf.eu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/staging.dd-decaf.eu/privkey.pem;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        # Lets encrypt renew domain verification files
        location /.well-known/acme-challenge {
            allow all;
            default_type "text/plain";
        }


        location / {
            root /usr/share/decaf/frontend/staging/dist;
            try_files $uri /index.html =404;
        }

        location /login {
            root /usr/share/decaf/frontend/staging/dist;
            try_files $uri /index.html =404;
        }
    }

    server {
        listen 443 ssl;
        server_name app.*;
        ssl_certificate /etc/letsencrypt/live/app.dd-decaf.eu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/app.dd-decaf.eu/privkey.pem;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        # Lets encrypt renew domain verification files
        location /.well-known/acme-challenge {
            allow all;
            default_type "text/plain";
        }


        location / {
            root /usr/share/decaf/frontend/prod/dist;
            try_files $uri /index.html =404;
        }

        location /login {
            root /usr/share/decaf/frontend/prod/dist;
            try_files $uri /index.html =404;
        }
    }

    server {
        listen 443 ssl;
        server_name logs.*;
        ssl_certificate /etc/letsencrypt/live/logs.dd-decaf.eu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/logs.dd-decaf.eu/privkey.pem;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://kibana;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 443 ssl;
        server_name docs.*;
        ssl_certificate /etc/letsencrypt/live/docs.dd-decaf.eu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/docs.dd-decaf.eu/privkey.pem;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        location / {
            root            /usr/share/nginx/doc;
            index           index.html index.htm;
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            }
        }
    }

    server {
        listen 443 ssl;
        server_name api.*;
        ssl_certificate /etc/letsencrypt/live/api.dd-decaf.eu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.dd-decaf.eu/privkey.pem;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        location /pathways {
            proxy_pass http://pathways;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /pathways/ws {
            proxy_pass http://pathways;
            proxy_http_version 1.1;
            proxy_connect_timeout 5m;
            proxy_send_timeout 5m;
            proxy_read_timeout 5m;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /maximum-yield {
            proxy_pass http://iloop_to_model;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /experiments {
            proxy_pass http://iloop_to_model;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /strains {
            proxy_pass http://iloop_to_model;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /samples {
            proxy_pass http://iloop_to_model;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /species {
            proxy_pass http://iloop_to_model;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /upload {
            proxy_pass http://upload;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /annotation {
            proxy_pass http://gene-to-reactions;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /idmapping {
            proxy_pass http://idmapping;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /v1 {
            proxy_set_header Host      $host;
            proxy_read_timeout 150;
            proxy_pass http://model;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /models {
            proxy_set_header Host      $host;
            proxy_read_timeout 150;
            proxy_pass http://model;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /data-adjusted {
            proxy_pass http://iloop_to_model;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /maps {
            proxy_set_header Host      $host;
            proxy_read_timeout 150;
            proxy_pass http://model;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /map {
            proxy_set_header Host      $host;
            proxy_read_timeout 150;
            proxy_pass http://model;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /model-options {
            proxy_set_header Host      $host;
            proxy_read_timeout 150;
            proxy_pass http://model;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /wsmodels {
            proxy_pass http://model;
            proxy_http_version 1.1;
            proxy_connect_timeout 5m;
            proxy_send_timeout 5m;
            proxy_read_timeout 5m;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /openapi.json {
            proxy_pass http://schema_collector;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 443 ssl;
        server_name api-staging.*;
        ssl_certificate /etc/letsencrypt/live/api-staging.dd-decaf.eu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api-staging.dd-decaf.eu/privkey.pem;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        location /pathways {
            proxy_pass http://pathways-staging;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /pathways/ws {
            proxy_pass http://pathways-staging;
            proxy_http_version 1.1;
            proxy_connect_timeout 5m;
            proxy_send_timeout 5m;
            proxy_read_timeout 5m;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /upload {
            proxy_pass http://upload-staging;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /annotation {
            proxy_pass http://gene-to-reactions-staging;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /maximum-yield {
            proxy_pass http://iloop_to_model-staging;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /experiments {
            proxy_pass http://iloop_to_model-staging;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /strains {
            proxy_pass http://iloop_to_model-staging;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /samples {
            proxy_pass http://iloop_to_model-staging;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /data-adjusted {
            proxy_pass http://iloop_to_model-staging;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /species {
            proxy_pass http://iloop_to_model-staging;
            proxy_set_header Host      $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /models {
            proxy_set_header Host      $host;
            proxy_read_timeout 150;
            proxy_pass http://model-staging;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /model-options {
            proxy_set_header Host      $host;
            proxy_read_timeout 150;
            proxy_pass http://model-staging;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /maps {
            proxy_set_header Host      $host;
            proxy_read_timeout 150;
            proxy_pass http://model-staging;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /map {
            proxy_set_header Host      $host;
            proxy_read_timeout 150;
            proxy_pass http://model-staging;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }
        
        location /v1 {
            proxy_set_header Host      $host;
            proxy_read_timeout 150;
            proxy_pass http://model-staging;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /wsmodels {
            proxy_pass http://model-staging;
            proxy_http_version 1.1;
            proxy_connect_timeout 5m;
            proxy_send_timeout 5m;
            proxy_read_timeout 5m;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /iam {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://iam-staging;
        }

        location /bigg/ {
            # Handle CORS preflight
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

                # Allow the Authorization header (which we must strip out below)
                add_header 'Access-Control-Allow-Headers' 'Authorization';

                # Return immediately - do not pass the request to bigg
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            proxy_pass http://bigg.ucsd.edu/api/v2/;
            proxy_set_header Authorization "";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }


server {
        listen 443 ssl;
        server_name iloop.* data.*;
        ssl_certificate /etc/letsencrypt/live/data.dd-decaf.eu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/data.dd-decaf.eu/privkey.pem;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://iloop-frontend;
        }

        location /api {
            proxy_pass http://iloop-web;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

            # Internet Explorer 11 has the world's most aggressive caching. We need to set the Cache-Control header
            expires 0;
        }

        location /socket.io/ {
            proxy_pass http://iloop-worker;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        error_page 404 /error_pages/404.html;
        error_page 500 /error_pages/500.html;
        error_page 502 /error_pages/502.html;

        location ^~ /error_pages/ {
            internal;
            root /usr/share/nginx/html;
            allow all;
        }

        location = /favicon.ico {
            alias /usr/share/nginx/html/favicon.ico;
        }
    }


server {
        listen 443 ssl;
        server_name ice.*;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;  # SSLv3 disabled due to POODLE
        ssl_certificate /etc/letsencrypt/live/ice.dd-decaf.eu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ice.dd-decaf.eu/privkey.pem;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://ice;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;
        }
    }

server {
        listen 443 ssl;
        server_name ice-staging.*;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;  # SSLv3 disabled due to POODLE
        ssl_certificate /etc/letsencrypt/live/ice-staging.dd-decaf.eu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ice-staging.dd-decaf.eu/privkey.pem;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://ice.ice-test:8080;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;
        }
    }

server {
        listen 443 ssl;
        server_name iloop-staging.*;
        ssl_certificate /etc/letsencrypt/live/iloop-staging.dd-decaf.eu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/iloop-staging.dd-decaf.eu/privkey.pem;

        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://iloop-frontend-staging;
        }

        location /api {
            proxy_pass http://iloop-web-staging;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

            # Internet Explorer 11 has the world's most aggressive caching. We need to set the Cache-Control header
            expires 0;
        }

        location /socket.io/ {
            proxy_pass http://iloop-worker-staging;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        error_page 404 /error_pages/404.html;
        error_page 500 /error_pages/500.html;
        error_page 502 /error_pages/502.html;

        location ^~ /error_pages/ {
            internal;
            root /usr/share/nginx/html;
            allow all;
        }

        location = /favicon.ico {
            alias /usr/share/nginx/html/favicon.ico;
        }
    }
}

